"use client";

// import { useTranslations } from "next-intl";
import { AppCard } from "@/components/AppCard";
import { FileText, AlertTriangle, Check, X, Scale, Users } from "lucide-react";

export default function TermsOfServicePage() {
  // const t = useTranslations("Terms");

  const sections = [
    {
      icon: <FileText className="h-6 w-6" />,
      title: "1. Ch·∫•p nh·∫≠n ƒëi·ªÅu kho·∫£n",
      content: [
        "B·∫±ng vi·ªác s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i, b·∫°n ƒë·ªìng √Ω tu√¢n th·ªß c√°c ƒëi·ªÅu kho·∫£n n√†y",
        "N·∫øu b·∫°n kh√¥ng ƒë·ªìng √Ω v·ªõi b·∫•t k·ª≥ ƒëi·ªÅu kho·∫£n n√†o, vui l√≤ng ng·ª´ng s·ª≠ d·ª•ng d·ªãch v·ª•",
        "Ch√∫ng t√¥i c√≥ quy·ªÅn c·∫≠p nh·∫≠t ƒëi·ªÅu kho·∫£n n√†y b·∫•t c·ª© l√∫c n√†o",
        "Vi·ªác ti·∫øp t·ª•c s·ª≠ d·ª•ng sau khi c·∫≠p nh·∫≠t ƒë·ªìng nghƒ©a v·ªõi vi·ªác ch·∫•p nh·∫≠n ƒëi·ªÅu kho·∫£n m·ªõi"
      ]
    },
    {
      icon: <Users className="h-6 w-6" />,
      title: "2. T√†i kho·∫£n ng∆∞·ªùi d√πng",
      content: [
        "B·∫°n ph·∫£i cung c·∫•p th√¥ng tin ch√≠nh x√°c khi ƒëƒÉng k√Ω t√†i kho·∫£n",
        "B·∫°n ch·ªãu tr√°ch nhi·ªám b·∫£o m·∫≠t th√¥ng tin ƒëƒÉng nh·∫≠p c·ªßa m√¨nh",
        "M·ªói ng∆∞·ªùi ch·ªâ ƒë∆∞·ª£c t·∫°o m·ªôt t√†i kho·∫£n duy nh·∫•t",
        "Ch√∫ng t√¥i c√≥ quy·ªÅn ƒë√¨nh ch·ªâ t√†i kho·∫£n vi ph·∫°m ƒëi·ªÅu kho·∫£n"
      ]
    },
    {
      icon: <Check className="h-6 w-6" />,
      title: "3. S·ª≠ d·ª•ng ƒë∆∞·ª£c ph√©p",
      content: [
        "T·∫°o link r√∫t g·ªçn cho m·ª•c ƒë√≠ch h·ª£p ph√°p v√† ch√≠nh ƒë√°ng",
        "Chia s·∫ª link v·ªõi ng∆∞·ªùi kh√°c m·ªôt c√°ch c√≥ tr√°ch nhi·ªám",
        "S·ª≠ d·ª•ng t√≠nh nƒÉng th·ªëng k√™ ƒë·ªÉ theo d√µi hi·ªáu qu·∫£",
        "B√°o c√°o c√°c v·∫•n ƒë·ªÅ k·ªπ thu·∫≠t ƒë·ªÉ ch√∫ng t√¥i c·∫£i thi·ªán d·ªãch v·ª•"
      ]
    },
    {
      icon: <X className="h-6 w-6" />,
      title: "4. H√†nh vi b·ªã c·∫•m",
      content: [
        "T·∫°o link ƒë·∫øn n·ªôi dung b·∫•t h·ª£p ph√°p, c√≥ h·∫°i ho·∫∑c kh√¥ng ph√π h·ª£p",
        "S·ª≠ d·ª•ng d·ªãch v·ª• ƒë·ªÉ spam, l·ª´a ƒë·∫£o ho·∫∑c g√¢y t·ªïn h·∫°i",
        "C·ªë g·∫Øng x√¢m nh·∫≠p ho·∫∑c l√†m gi√°n ƒëo·∫°n h·ªá th·ªëng",
        "Sao ch√©p, b√°n l·∫°i ho·∫∑c khai th√°c th∆∞∆°ng m·∫°i d·ªãch v·ª•",
        "T·∫°o t√†i kho·∫£n gi·∫£ m·∫°o ho·∫∑c cung c·∫•p th√¥ng tin sai l·ªách"
      ]
    },
    {
      icon: <AlertTriangle className="h-6 w-6" />,
      title: "5. Tr√°ch nhi·ªám v√† gi·ªõi h·∫°n",
      content: [
        "D·ªãch v·ª• ƒë∆∞·ª£c cung c·∫•p \"nh∆∞ hi·ªán t·∫°i\" kh√¥ng c√≥ b·∫£o ƒë·∫£m n√†o",
        "Ch√∫ng t√¥i kh√¥ng ch·ªãu tr√°ch nhi·ªám v·ªÅ n·ªôi dung c·ªßa link g·ªëc",
        "Ng∆∞·ªùi d√πng t·ª± ch·ªãu tr√°ch nhi·ªám v·ªÅ vi·ªác s·ª≠ d·ª•ng d·ªãch v·ª•",
        "Ch√∫ng t√¥i c√≥ quy·ªÅn ng·ª´ng cung c·∫•p d·ªãch v·ª• b·∫•t c·ª© l√∫c n√†o",
        "Kh√¥ng b·∫£o ƒë·∫£m th·ªùi gian ho·∫°t ƒë·ªông 100% c·ªßa h·ªá th·ªëng"
      ]
    },
    {
      icon: <Scale className="h-6 w-6" />,
      title: "6. Quy·ªÅn s·ªü h·ªØu tr√≠ tu·ªá",
      content: [
        "T·∫•t c·∫£ quy·ªÅn s·ªü h·ªØu tr√≠ tu·ªá c·ªßa d·ªãch v·ª• thu·ªôc v·ªÅ ch√∫ng t√¥i",
        "B·∫°n gi·ªØ quy·ªÅn s·ªü h·ªØu ƒë·ªëi v·ªõi n·ªôi dung b·∫°n chia s·∫ª",
        "B·∫°n c·∫•p cho ch√∫ng t√¥i quy·ªÅn s·ª≠ d·ª•ng d·ªØ li·ªáu ƒë·ªÉ cung c·∫•p d·ªãch v·ª•",
        "Kh√¥ng ƒë∆∞·ª£c sao ch√©p, ph√¢n ph·ªëi l·∫°i m√£ ngu·ªìn ho·∫∑c thi·∫øt k·∫ø"
      ]
    }
  ];

  const pricing = [
    {
      feature: "D·ªãch v·ª• c∆° b·∫£n",
      description: "T·∫°o v√† qu·∫£n l√Ω link r√∫t g·ªçn",
      price: "Mi·ªÖn ph√≠"
    },
    {
      feature: "Th·ªëng k√™ chi ti·∫øt",
      description: "Xem ph√¢n t√≠ch click v√† ngu·ªìn truy c·∫≠p",
      price: "Mi·ªÖn ph√≠"
    },
    {
      feature: "Link t√πy ch·ªânh",
      description: "T·∫°o alias t√πy ch·ªânh cho link",
      price: "Mi·ªÖn ph√≠"
    },
    {
      feature: "B·∫£o v·ªá m·∫≠t kh·∫©u",
      description: "Th√™m m·∫≠t kh·∫©u b·∫£o v·ªá cho link",
      price: "Mi·ªÖn ph√≠"
    }
  ];

  return (
    <div className="min-h-screen bg-gradient-to-br from-blue-50 via-white to-purple-50 dark:from-gray-900 dark:via-gray-800 dark:to-gray-900">
      <div className="container mx-auto px-4 py-16">
        {/* Header */}
        <div className="text-center mb-12">
          <div className="flex justify-center mb-6">
            <div className="p-4 bg-blue-100 dark:bg-blue-900 rounded-full">
              <Scale className="h-12 w-12 text-blue-600 dark:text-blue-400" />
            </div>
          </div>
          <h1 className="text-4xl font-bold bg-gradient-to-r from-blue-600 to-purple-600 bg-clip-text text-transparent mb-4">
            ƒêi·ªÅu kho·∫£n d·ªãch v·ª•
          </h1>
          <p className="text-xl text-gray-600 dark:text-gray-300 max-w-3xl mx-auto">
            Vui l√≤ng ƒë·ªçc k·ªπ c√°c ƒëi·ªÅu kho·∫£n v√† ƒëi·ªÅu ki·ªán s·ª≠ d·ª•ng d·ªãch v·ª• c·ªßa ch√∫ng t√¥i. 
            Vi·ªác s·ª≠ d·ª•ng d·ªãch v·ª• ƒë·ªìng nghƒ©a v·ªõi vi·ªác b·∫°n ch·∫•p nh·∫≠n c√°c ƒëi·ªÅu kho·∫£n n√†y.
          </p>
          <div className="mt-6 text-sm text-gray-500 dark:text-gray-400">
            C√≥ hi·ªáu l·ª±c t·ª´: {new Date().toLocaleDateString('vi-VN')}
          </div>
        </div>

        {/* Content */}
        <div className="max-w-4xl mx-auto">
          <div className="space-y-8">
            {sections.map((section, index) => (
              <AppCard key={index} className="p-8">
                <div className="flex items-start gap-4 mb-6">
                  <div className="flex-shrink-0 p-3 bg-blue-100 dark:bg-blue-900 rounded-lg">
                    <div className="text-blue-600 dark:text-blue-400">
                      {section.icon}
                    </div>
                  </div>
                  <div>
                    <h2 className="text-xl font-bold text-gray-900 dark:text-white">
                      {section.title}
                    </h2>
                  </div>
                </div>
                
                <ul className="space-y-3">
                  {section.content.map((item, itemIndex) => (
                    <li key={itemIndex} className="flex items-start gap-3">
                      <div className="flex-shrink-0 w-2 h-2 bg-blue-500 rounded-full mt-2"></div>
                      <span className="text-gray-600 dark:text-gray-300 leading-relaxed">
                        {item}
                      </span>
                    </li>
                  ))}
                </ul>
              </AppCard>
            ))}
          </div>

          {/* Pricing Information */}
          <AppCard className="p-8 mt-8">
            <h2 className="text-2xl font-bold text-gray-900 dark:text-white mb-6 text-center">
              Th√¥ng tin gi√° c·∫£
            </h2>
            <div className="bg-green-50 dark:bg-green-900/20 border border-green-200 dark:border-green-800 rounded-lg p-6 mb-6">
              <div className="text-center">
                <h3 className="text-xl font-bold text-green-800 dark:text-green-400 mb-2">
                  üéâ T·∫•t c·∫£ d·ªãch v·ª• hi·ªán t·∫°i ƒë·ªÅu MI·ªÑN PH√ç!
                </h3>
                <p className="text-green-700 dark:text-green-300">
                  Ch√∫ng t√¥i cung c·∫•p t·∫•t c·∫£ t√≠nh nƒÉng ho√†n to√†n mi·ªÖn ph√≠ cho ng∆∞·ªùi d√πng
                </p>
              </div>
            </div>
            
            <div className="grid md:grid-cols-2 gap-4">
              {pricing.map((item, index) => (
                <div key={index} className="border border-gray-200 dark:border-gray-700 rounded-lg p-4">
                  <div className="flex justify-between items-start">
                    <div className="flex-1">
                      <h3 className="font-semibold text-gray-900 dark:text-white">
                        {item.feature}
                      </h3>
                      <p className="text-sm text-gray-600 dark:text-gray-400 mt-1">
                        {item.description}
                      </p>
                    </div>
                    <span className="bg-green-100 dark:bg-green-900 text-green-800 dark:text-green-300 px-3 py-1 rounded-full text-sm font-medium ml-3">
                      {item.price}
                    </span>
                  </div>
                </div>
              ))}
            </div>
          </AppCard>

          {/* Contact Info */}
          <AppCard className="p-8 mt-8 bg-gradient-to-r from-blue-500 to-purple-600">
            <div className="text-white text-center">
              <h3 className="text-xl font-bold mb-4">C√≥ th·∫Øc m·∫Øc v·ªÅ ƒëi·ªÅu kho·∫£n?</h3>
              <p className="text-blue-100 mb-6">
                N·∫øu b·∫°n c·∫ßn l√†m r√µ b·∫•t k·ª≥ ƒëi·ªÅu kho·∫£n n√†o ho·∫∑c c√≥ c√¢u h·ªèi ph√°p l√Ω, 
                vui l√≤ng li√™n h·ªá v·ªõi b·ªô ph·∫≠n ph√°p ch·∫ø c·ªßa ch√∫ng t√¥i.
              </p>
              <div className="flex flex-col sm:flex-row gap-2 justify-center items-center">
                <span className="text-blue-100">Email: </span>
                <a 
                  href="mailto:legal@linkshortener.com" 
                  className="text-white font-semibold hover:text-blue-200 transition-colors"
                >
                  legal@linkshortener.com
                </a>
              </div>
            </div>
          </AppCard>
        </div>
      </div>
    </div>
  );
}